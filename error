
    public void uploadToExternalApi(File file, String path) {
        try {
            // Step 1: Get the batch ID from the first API
            String batchId = getBatchId();

            // Step 2: Upload the file
            uploadFile(batchId, file);

            // Step 3: Check the upload status (Optional, can be used for monitoring)
            checkUploadStatus(batchId);

            // Step 4: Create the document in the specified path
            createDocument(path, batchId);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private String getBatchId() throws JsonProcessingException {
        String url = "https://nuxeodev.optum.com/nuxeo/api/v1/upload";
        HttpHeaders headers = createAuthHeaders();
        HttpEntity<String> entity = new HttpEntity<>(headers);

        // POST request to get the BatchId
        RestTemplate restTemplate = new RestTemplate();
        ResponseEntity<String> response = restTemplate.exchange(url, HttpMethod.POST, entity, String.class);
        // Extract BatchId from the response (Assuming it's in the response body)
        ObjectMapper objectMapper = new ObjectMapper();
        JsonNode node = objectMapper.readTree(response.getBody());
        return node.path("batchId").asText(); // Assuming the response contains the BatchId directly
    }

    private void uploadFile(String batchId, File file) {
        String url = "https://nuxeodev.optum.com/nuxeo/api/v1/upload/" + batchId + "/0";
        HttpHeaders headers = createAuthHeaders();
        headers.set("Content-Type", "multipart/form-data");

        // Assuming we are uploading as form-data
        HttpEntity<File> entity = new HttpEntity<>(file, headers);
        RestTemplate restTemplate = new RestTemplate();

        // POST request to upload the file
        restTemplate.exchange(url, HttpMethod.POST, entity, String.class);
    }

    private void checkUploadStatus(String batchId) {
        String url = "https://nuxeodev.optum.com/nuxeo/api/v1/upload/" + batchId;
        HttpHeaders headers = createAuthHeaders();
        HttpEntity<String> entity = new HttpEntity<>(headers);

        // GET request to check upload status
        RestTemplate restTemplate = new RestTemplate();
        restTemplate.exchange(url, HttpMethod.GET, entity, String.class);
    }

    private void createDocument(String path, String batchId) {
        String url = "https://nuxeodev.optum.com/nuxeo/api/v1/path/" + path;
        HttpHeaders headers = createAuthHeaders();

        // Here you may need to construct the request body (probably JSON) depending on the API
        String requestBody = "{ \"batchId\": \"" + batchId + "\" }";
        HttpEntity<String> entity = new HttpEntity<>(requestBody, headers);

        // POST request to create the document
        RestTemplate restTemplate = new RestTemplate();

        restTemplate.exchange(url, HttpMethod.POST, entity, String.class);
    }

    private HttpHeaders createAuthHeaders() {
        HttpHeaders headers = new HttpHeaders();
        headers.set("Authorization", "Basic " + encodeCredentials(username, password));
        return headers;
    }

    private String encodeCredentials(String username, String password) {
        String credentials = username + ":" + password;
        return new String(java.util.Base64.getEncoder().encode(credentials.getBytes()));
    }
