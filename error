import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.text.PDFTextStripper;

import java.io.File;
import java.io.IOException;
import java.util.*;
import java.util.regex.*;

public class MetadataExtractor {

    public static void main(String[] args) throws IOException {
        File file = new File("path/to/searchable.pdf");
        PDDocument document = PDDocument.load(file);
        PDFTextStripper stripper = new PDFTextStripper();

        int pageCount = document.getNumberOfPages();

        String firstName = null;
        String dob = null;

        // Step 1: Find value using label
        for (int i = 1; i <= pageCount && (firstName == null || dob == null); i++) {
            stripper.setStartPage(i);
            stripper.setEndPage(i);
            String text = stripper.getText(document);

            if (firstName == null) {
                firstName = extractValueByLabel(text, "First Name");
            }
            if (dob == null) {
                dob = extractValueByLabel(text, "DOB");
            }
        }

        System.out.println("Extracted First Name: " + firstName);
        System.out.println("Extracted DOB: " + dob);

        // Step 2: Find page numbers where the values occur
        Set<Integer> firstNamePages = new HashSet<>();
        Set<Integer> dobPages = new HashSet<>();

        for (int i = 1; i <= pageCount; i++) {
            stripper.setStartPage(i);
            stripper.setEndPage(i);
            String text = stripper.getText(document);

            if (firstName != null && text.contains(firstName)) {
                firstNamePages.add(i);
            }
            if (dob != null && text.contains(dob)) {
                dobPages.add(i);
            }
        }

        document.close();

        System.out.println("First Name occurs on pages: " + firstNamePages);
        System.out.println("DOB occurs on pages: " + dobPages);
    }

    private static String extractValueByLabel(String text, String label) {
        Pattern pattern = Pattern.compile(label + "\\s*[:\\-]?\\s*([A-Za-z ,.'-]+)");
        Matcher matcher = pattern.matcher(text);
        if (matcher.find()) {
            return matcher.group(1).trim();
        }
        return null;
    }
}
