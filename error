# Your custom Alpine-based OCR image with Python, OCR tools, and Java
FROM ocr-java-python:latest AS ocrbase

# Internal Java base image (likely Debian or Alpine-based)
FROM docker.repo1.uhc.com/ecp/base-java17-image:latest-master AS final

ENV LANG=C.UTF-8
ENV TZ=UTC

# Create app user
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

WORKDIR /app

# ✅ Copy everything from your OCR image (app, .venv, symlinks, scripts, etc.)
COPY --from=ocrbase /app /app
COPY --from=ocrbase /usr/lib/jvm/java-17-openjdk /usr/lib/jvm/java-17-openjdk
COPY --from=ocrbase /usr/bin/tesseract /usr/bin/tesseract
COPY --from=ocrbase /usr/share/tessdata /usr/share/tessdata
COPY --from=ocrbase /usr/bin/ocrmypdf /usr/bin/ocrmypdf
COPY --from=ocrbase /lib /lib
COPY --from=ocrbase /usr/lib /usr/lib

# ✅ Re-link Python virtualenv if needed
ENV PATH="/app/.venv/bin:${PATH}"
ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk
ENV PATH=$JAVA_HOME/bin:$PATH

# Copy JAR and properties
COPY target/pdf-process-0.0.1-SNAPSHOT.jar app.jar
COPY target/application-docker.properties application.properties

EXPOSE 9040

ENTRYPOINT ["java", "-jar", "/app/app.jar"]
