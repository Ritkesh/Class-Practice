package com.optum.dms.pdfprocess.service;

import com.hierynomus.msdtyp.AccessMask;
import com.hierynomus.msfscc.FileAttributes;
import com.hierynomus.mssmb2.SMB2CreateDisposition;
import com.hierynomus.mssmb2.SMB2CreateOptions;
import com.hierynomus.mssmb2.SMB2ShareAccess;
import com.hierynomus.smbj.SMBClient;
import com.hierynomus.smbj.auth.AuthenticationContext;
import com.hierynomus.smbj.connection.Connection;
import com.hierynomus.smbj.session.Session;
import com.hierynomus.smbj.share.DiskShare;
import com.hierynomus.smbj.share.File;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import java.io.*;
import java.util.Base64;
import java.util.EnumSet;

@Service

public class OcrPdfService {
    @Value("${smb.userName}")
    private String userName;
    @Value("${smb.password}")
    private String password;
    public java.io.File getTestFile(String fileName) throws Exception {
        SMBClient client = new SMBClient();

        java.io.File tempfile = null;

        try (Connection connection = client.connect("wn000129907")) {
            AuthenticationContext authContext = new AuthenticationContext(userName, new String(Base64.getDecoder().decode(password)).toCharArray(), null);
            Session session = connection.authenticate(authContext);

            try (DiskShare share = (DiskShare) session.connectShare("DMS-TEAM")) {
                String filePath = "ocrMyPDF/"+fileName;

                if (share.fileExists(filePath)) {
                     File file = share.openFile(
                            filePath,
                            EnumSet.of(AccessMask.GENERIC_READ),
                            EnumSet.of(FileAttributes.FILE_ATTRIBUTE_NORMAL),
                            EnumSet.of(SMB2ShareAccess.FILE_SHARE_READ),
                            SMB2CreateDisposition.FILE_OPEN,
                            EnumSet.noneOf(SMB2CreateOptions.class)
                    );
                    tempfile= java.io.File.createTempFile("test-",".pdf");

                    try (InputStream is = file.getInputStream()) {
                        // Read and process input stream here
                        OutputStream out = new FileOutputStream(tempfile);
                        byte[] buffer = new byte[8192];
                        int bytesread;
                        while ((bytesread = is.read(buffer))!=-1){
                            out.write(buffer,0,bytesread);
                        }
                        System.out.println("File opened successfully!");
                    }
                } else {
                    System.out.println("File not found: " + filePath);
                }
            }
        }
        return tempfile;
    }
}

